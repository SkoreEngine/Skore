// MIT License
//
// Copyright (c) 2025 Paulo Marangoni (Daethalus)
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.


cbuffer CameraBuffer
{
	matrix viewProjection;
    matrix view;
    matrix projection;
    matrix viewInv;
    matrix projectionInv;
	float3 cameraPosition;
	float  pad;
};

struct PushConstants
{
	matrix world;
};

[[vk::push_constant]] PushConstants pushConstants;

struct VertexInput
{
	float3 position : POSITION;
	float3 normal 	: NORMAL;
	float2 texCoord : TEXCOORD0;
    uint   color    : COLOR;
};

// Vertex Shader
float4 MainVS(VertexInput input) : SV_POSITION
{
    float4 pos = mul(viewProjection, mul(pushConstants.world, float4(input.position, 1.0f)));
    //check if it's vk
    pos.y = -pos.y;
	return pos;
}

// Pixel Shader
float4 MainPS() : SV_TARGET
{
    return float4(0.0, 1.0, 0.0, 1.0);
}