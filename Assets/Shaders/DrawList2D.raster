// MIT License
//
// Copyright (c) 2025 Paulo Marangoni (Daethalus)
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#include "Common.hlsli"


struct VertexInput
{
    float2 pos : POSITION;
    float2 uv : TEXCOORD0;
    uint   color : COLOR;
};

struct PushConstants
{
    float4x4 projection;
};


[[vk::push_constant]] PushConstants pushConstants;


struct VertexToPixel
{
    float4 position : SV_POSITION;
    float2 uv : TEXCOORD0;
    uint   color : COLOR0;
};


VertexToPixel MainVS(VertexInput input)
{
    VertexToPixel output;
    output.position = mul(pushConstants.projection, float4(input.pos.xy, 0.0, 1.0));

    //[ViewportFlipped]
    output.position.y = -output.position.y;
    output.uv = input.uv;
    output.color = input.color;
    return output;
}

struct PSOutput
{
    float4 color : SV_Target0;
};

PSOutput MainPS(VertexToPixel input)
{
    PSOutput output;
    output.color = ColorFromU32(input.color);
    return output;
}